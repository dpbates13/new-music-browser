{"version":3,"sources":["loader.gif","landingPage.js","GenreButton.js","GenreItem.js","Mainpage.js","App.js","index.js"],"names":["module","exports","LandingPage","this","props","loaded","className","role","src","logo","width","to","Component","GenreButton","href","link","name","genre","type","onClick","selectGenre","AlbumItem","album","images","url","alt","artists","uri","Mainpage","state","selected","idsUsed","input","React","createRef","id","setState","genreName","re","RegExp","replace","toLowerCase","listFromGenreName","i","genreList","length","search","push","onSubmit","e","preventDefault","current","value","ref","aria-label","map","key","albumDatabase","genres","includes","App","Promise","resolve","reject","fetch","method","then","res","json","getData","openSite","path","exact","component","render","ReactDOM","basename","window","location","pathname","document","getElementById"],"mappings":"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","file":"static/js/main.389268c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.1f395df9.gif\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"./loader.gif\";\n\nclass LandingPage extends Component {\n  render() {\n    if (this.props.loaded == 0) {\n      return (\n        <header className=\"loading\" role=\"banner\">\n          <h2>Welcome to the Spotify New Music Browser</h2>\n          <p>\n            This website allows you to find albums released on Spotify that\n            don't show up on Spotify's New Releases page. It also sorts them by\n            genre, so that you don't have to waste time looking through music\n            that doesn't interest you.\n          </p>\n          <p>Please wait while data is loaded from Spotify</p>\n          <img src={logo} width=\"20px\"></img>\n        </header>\n      );\n    } else {\n      return (\n        <header className=\"loading\" role=\"banner\">\n          <h2>Welcome to the Spotify New Music Browser</h2>\n          <p>\n            This website allows you to find albums released on Spotify that\n            don't show up on Spotify's New Releases page. It also sorts them by\n            genre, so that you don't have to waste time looking through music\n            that doesn't interest you.\n          </p>\n          <Link to=\"/Main\" className=\"genreButton\">\n            Enter Site\n          </Link>\n        </header>\n      );\n    }\n  }\n}\n\nexport default LandingPage;\n","import React from \"react\";\n\nexport default function GenreButton(props) {\n  return (\n    <a href={props.link}>\n      <button\n        name={props.genre}\n        type=\"button\"\n        onClick={props.selectGenre}\n        className=\"genreButton\"\n      >\n        {props.genre}\n      </button>\n    </a>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass AlbumItem extends Component {\n  render() {\n    return (\n      <div className=\"albumElement\">\n        <img\n          src={this.props.album.images[0].url}\n          alt={`${this.props.album.name} by ${this.props.album.artists[0].name}`}\n        ></img>\n        <a className=\"album\" href={this.props.album.uri}>\n          {this.props.album.name}\n        </a>\n        <p className=\"artist\">{this.props.album.artists[0].name}</p>\n      </div>\n    );\n  }\n}\n\nexport default AlbumItem;\n","import React, { Component } from \"react\";\nimport GenreButton from \"./GenreButton\";\nimport AlbumItem from \"./GenreItem\";\n\nclass Mainpage extends Component {\n  constructor(props) {\n    super();\n    this.input = React.createRef();\n  }\n  state = {\n    selected: [],\n    idsUsed: [],\n  };\n  addIds(id) {\n    this.setState({ idsUsed: [...this.state.idsUsed, id] });\n  }\n  selectGenre(genreName) {\n    let albumCount = 0;\n    const re = new RegExp(genreName.replace(\"amp;\", \"\").toLowerCase());\n    let listFromGenreName = [];\n    for (let i = 0; i < this.props.genreList.length; i++) {\n      if (this.props.genreList[i].search(re) > -1) {\n        listFromGenreName.push(this.props.genreList[i]);\n      }\n    }\n    this.setState({ selected: listFromGenreName });\n  }\n\n  render() {\n    const idsUsed = [];\n    return (\n      <div className=\"content\">\n        <h1>Please select a genre below</h1>\n        <p className=\"instructions\">\n          This will display albums associated with that genre, sorted by\n          subgenre\n        </p>\n        <ul id=\"top\" className=\"keyGenres\">\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"hip hop\"\n            selectGenre={() => this.selectGenre(\"hip hop\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"r&b\"\n            selectGenre={() => this.selectGenre(\"r&b\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"pop\"\n            selectGenre={() => this.selectGenre(\"pop\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"dance\"\n            selectGenre={() => this.selectGenre(\"dance\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"edm\"\n            selectGenre={() => this.selectGenre(\"edm\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"electronic\"\n            selectGenre={() => this.selectGenre(\"electronic\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"trap\"\n            selectGenre={() => this.selectGenre(\"trap\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"rock\"\n            selectGenre={() => this.selectGenre(\"rock\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"metal\"\n            selectGenre={() => this.selectGenre(\"metal\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"punk\"\n            selectGenre={() => this.selectGenre(\"punk\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"folk\"\n            selectGenre={() => this.selectGenre(\"folk\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"country\"\n            selectGenre={() => this.selectGenre(\"country\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"reggaeton\"\n            selectGenre={() => this.selectGenre(\"reggaeton\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"latin\"\n            selectGenre={() => this.selectGenre(\"latin\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"classical\"\n            selectGenre={() => this.selectGenre(\"classical\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"alternative\"\n            selectGenre={() => this.selectGenre(\"alternative\")}\n          />\n          <GenreButton\n            link=\"#subGenres\"\n            genre=\"indie\"\n            selectGenre={() => this.selectGenre(\"indie\")}\n          />\n        </ul>\n        <p className=\"instructions\">Or enter your own search term</p>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.selectGenre(this.input.current.value);\n          }}\n          className=\"keySearch\"\n        >\n          <input\n            id=\"text\"\n            type=\"text\"\n            ref={this.input}\n            aria-label=\"Genre Search\"\n          ></input>\n          <button type=\"submit\" className=\"submit\">\n            Search Genres\n          </button>\n        </form>\n        <div id=\"subGenres\">\n          <ul className=\"subGenres\">\n            {this.state.selected.map((genre) => (\n              <GenreButton\n                link=\"#showAlbums\"\n                key={genre}\n                genre={genre}\n                selectGenre={() => this.selectGenre(genre)}\n              />\n            ))}\n          </ul>\n        </div>\n        <div id=\"showAlbums\" className=\"showAlbums\">\n          {this.state.selected.map((genre) => (\n            <div key={genre} className=\"genreDiv\">\n              <h1>{genre}</h1>\n              <div className=\"albumElements\">\n                {this.props.albumDatabase.map((album) => {\n                  if (\n                    album.genres.includes(genre) &&\n                    !idsUsed.includes(album.id)\n                  ) {\n                    idsUsed.push(album.id);\n                    return <AlbumItem key={album.id} album={album} />;\n                  }\n                })}\n              </div>\n            </div>\n          ))}\n        </div>\n        <a href=\"#top\" className=\"toTop\">\n          ^\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Mainpage;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport LandingPage from \"./landingPage\";\nimport Mainpage from \"./Mainpage\";\n\nclass App extends Component {\n  state = {\n    albumDatabase: [],\n    genreList: [],\n    loaded: 0,\n  };\n\n  getData() {\n    return new Promise((resolve, reject) => {\n      fetch(\"https://radiant-tundra-53106.herokuapp.com/data\", {\n        method: \"GET\",\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          this.setState({\n            albumDatabase: res.albumDatabase,\n            genreList: res.genreList,\n          });\n          resolve();\n        });\n    });\n  }\n\n  openSite() {\n    this.setState({ loaded: 1 });\n  }\n  async componentDidMount() {\n    await this.getData();\n    this.openSite();\n  }\n  render() {\n    return (\n      <main>\n        <Route\n          path=\"/\"\n          exact\n          component={() => <LandingPage loaded={this.state.loaded} />}\n        />\n        <Route\n          path=\"/Main\"\n          render={() => (\n            <Mainpage\n              albumDatabase={this.state.albumDatabase}\n              genreList={this.state.genreList}\n            />\n          )}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={window.location.pathname || \"\"}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}